name: Deploy App to containerized web app
on: [push, workflow_dispatch]

env:
  IMAGE_NAME: flask-demo
  KEY_VAULT_SECRET_NAME_ACR_USERNAME: "acr-username"
  KEY_VAULT_SECRET_NAME_ACR_PASSWORD: "acr-password1"
  KEY_VAULT_NAME: "adnan4-keyvault1"
  REGISTRY_LOGIN_SERVER: "adnan4.azurecr.io"
  WEB_APP_NAME: "adnan4-webapp"
  REGISTRY_USERNAME: "adnan4"
  REGISTRY_PASSWORD: "ZtS+xxL1j1p/uSR9cweyo23IQyVlNrjJX+oKbExXlt+ACRDUDypi"
  DOCKER_REGISTRY_SERVER_URL: "adnan4.azurecr.io"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # checkout the repo
      - name: "Checkout Github Action"
        uses: actions/checkout@main

      - name: "Login via Azure CLI"
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: "Get docker registry credentials from Azure Key Vault"
        uses: azure/CLI@v1
        with:
          inlineScript: |
            echo "REGISTRY_USERNAME=$(az keyvault secret show --name ${{ env.KEY_VAULT_SECRET_NAME_ACR_USERNAME }} --vault-name ${{ env.KEY_VAULT_NAME }} --query value -o tsv)" >> $GITHUB_ENV
            echo "REGISTRY_PASSWORD=$(az keyvault secret show --name ${{ env.KEY_VAULT_SECRET_NAME_ACR_PASSWORD }} --vault-name ${{ env.KEY_VAULT_NAME }} --query value -o tsv)" >> $GITHUB_ENV

      - name: "Login Docker Registry"
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.REGISTRY_LOGIN_SERVER }}
          username: ${{ env.REGISTRY_USERNAME }}
          password: ${{ env.REGISTRY_PASSWORD }}

      - name: Set image version
        id: image-version
        run: echo "::set-output name=version::$(date +'%Y.%m.%d.%H.%M')"

      - name: "Build and push image"
        run: |
          docker build . -t ${{ env.DOCKER_REGISTRY_SERVER_URL }}/${{env.IMAGE_NAME}}:${{ steps.image-version.outputs.version }}
          docker build . -t ${{ env.DOCKER_REGISTRY_SERVER_URL }}/${{env.IMAGE_NAME}}:latest
          docker push ${{ env.DOCKER_REGISTRY_SERVER_URL }}/${{env.IMAGE_NAME}}:${{ steps.image-version.outputs.version }}
          docker push ${{ env.DOCKER_REGISTRY_SERVER_URL }}/${{env.IMAGE_NAME}}:latest

      - uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.WEB_APP_NAME }}
          images: "${{env.DOCKER_REGISTRY_SERVER_URL}}/${{env.IMAGE_NAME}}:latest"
